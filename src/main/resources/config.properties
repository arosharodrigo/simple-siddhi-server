key.file.path=/home/ubuntu/helib-keys

databridge.protocol=thrift
#databridge.protocol=binary

databridge.receiver.host=0.0.0.0
databridge.receiver.port=9611

databridge.publisher.host=172.31.45.20
#databridge.publisher.host=172.31.45.10
#databridge.publisher.host=34.235.106.125
databridge.publisher.port=7661
databridge.publisher.username=admin
databridge.publisher.password=admin

siddhi.query1=define stream inputFilterStream (timestamp long, value long); @info(name = 'query1') from inputFilterStream select timestamp, (value+30L) as withBonusValue insert into outputFilterStream;
siddhi.query2=define stream inputHEFilterStream (timestampList string, valueList string, size String); @info(name = 'query2') from inputHEFilterStream select timestampList, he:add(valueList, 30L) as withBonusValueList, size insert into outputHEFilterStream;
siddhi.query3=define stream inputEmailsStream (iij_timestamp long, fromAddress string, toAddresses string, ccAddresses string, bccAddresses string, subject string, body string); @info(name = 'query3') from inputEmailsStream [(str:equals(fromAddress, 'lynn.blair@enron.com') and (str:equals(toAddresses, 'richard.hanagriff@enron.com') or str:equals(ccAddresses, 'richard.hanagriff@enron.com'))) == false] select iij_timestamp, fromAddress, toAddresses as toAdds, ccAddresses as ccAdds, bccAddresses as bccAdds, subject as updatedSubject, body as bodyObfuscated insert into outputEmailsStream;
siddhi.query4=define stream inputHEEmailsStream (iij_timestamp string, fromAddress string, toAddresses string, ccAddresses string, bccAddresses string, subject string, body string); @info(name = 'query4') from inputHEEmailsStream select iij_timestamp, he:equal(fromAddress, 'lynn.blair@enron.com') as fromAddress, he:equal(toAddresses, 'richard.hanagriff@enron.com') as toAdds, he:equal(ccAddresses, 'richard.hanagriff@enron.com') as ccAdds, bccAddresses as bccAdds, subject as updatedSubject, body as bodyObfuscated insert into outputHEEmailsStream;
siddhi.query5=define stream inputEdgarStream (iij_timestamp long, ip string, date string, time string, zone string, cik string, accession string, extension string, code string, size string, idx string, norefer string, noagent string, find string, crawler string, browser string); @info(name = 'query5') from inputEdgarStream [(str:equals(date, '2016-10-01') and str:equals(extension, 'v16003sv1.htm') and str:equals(code, '200.0')) == false] select iij_timestamp, ip, date, time, zone, cik, accession, extension, code, size, idx, norefer, noagent, find, crawler, browser insert into outputEdgarStream;
siddhi.query6=define stream inputHEEdgarStream (iij_timestamp string, ip string, date string, time string, zone string, cik string, accession string, extension string, code string, size string, idx string, norefer string, noagent string, find string, crawler string, browser string); @info(name = 'query6') from inputHEEdgarStream select iij_timestamp, ip, he:equal(date, '2016-10-01') as date, time, zone, cik, accession, he:equal(extension, 'v16003sv1.htm') as extension, he:equal(code, '200') as code, size, idx, norefer, noagent, find, crawler, browser insert into outputHEEdgarStream;